name: Staging deployment

on:
  push:
    branches: [ master ]

jobs:
  # staging_prepare:
  #   runs-on: self-hosted
  #   concurrency:
  #     group: staging_incr_version
  #     cancel-in-progress: false
  #   if: contains(vars.ALLOWED_USERS, github.actor)
  #   steps:
  #     - name: Checkout ğŸ‘€
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #         lfs: false
  #     - name: Staging prepare ğŸš—
  #       run: |
  #         echo "Staging prepare."
  #         LATEST_TAG=$( git describe --tags --abbrev=0 )
  #         NEW_TAG=$(echo $LATEST_TAG | awk -F '.' '{ print $1 "." $2 "." $3+1 }')
  #         git tag $NEW_TAG
  #         git push origin $NEW_TAG
  # staging_frontend_build:
  #   runs-on: self-hosted
  #   needs: [staging_prepare]
  #   steps:
  #     - name: Staging FrontEnd Build ğŸš—
  #       run: |
  #         echo "Staging FrontEnd build."
  # staging_containers_build:
  #   runs-on: self-hosted
  #   needs: [staging_prepare]
  #   outputs:
  #     new_tag: ${{ steps.staging_containers_build.outputs.new_tag }}
  #   steps:
  #     - name: Staging Container Build ğŸš—
  #       id: staging_containers_build
  #       run: |
  #         echo "Staging container build."
  #         echo "new_tag=v1.2.3" >> "$GITHUB_OUTPUT"
  # staging_deploy:
  #   runs-on: self-hosted
  #   concurrency:
  #     group: staging
  #     cancel-in-progress: false
  #   needs: [staging_frontend_build, staging_containers_build]
  #   steps:
  #     - name: Staging Deploy with ${{needs.staging_containers_build.outputs.new_tag}} tag ğŸš—
  #       env:
  #         NEW_TAG: ${{needs.staging_containers_build.outputs.new_tag}}
  #       run: |
  #         echo "Staging Deploy."
  #         echo "$NEW_TAG"
  # staging_tests:
  #   uses: ./.github/workflows/ci.yml
  #   needs: [staging_deploy]
  # e2e_cypress_staging:
  #   runs-on: self-hosted
  #   concurrency:
  #     group: staging
  #     cancel-in-progress: false
  #   needs: [staging_deploy]
  #   steps:
  #     - name: E2E Staging Cypress tests ğŸš—
  #       run: |
  #         echo "Staging e2e_cypress tests...."
  staging_prepare:
    runs-on: self-hosted
    outputs:
      ttt: ${{ steps.vars.outputs.ttt }}
    concurrency:
      group: staging_incr_version
      cancel-in-progress: false
    steps:
      - name: Staging prepare ğŸš—
        id: vars
        run: |
          echo "staging_prepare"
          echo "ttt=lalala" >> "$GITHUB_OUTPUT"
  staging_frontend_build:
    runs-on: self-hosted
    needs: [staging_prepare]
    steps:
      - name: Staging prepare ğŸš—
        env:
          TTT: ${{needs.staging_containers_build.outputs.ttt}}
        run: |
          echo "staging_frontend_build"
          echo "$TTT"
  staging_containers_build:
    runs-on: self-hosted
    needs: [staging_prepare]
    steps:
      - name: Staging prepare ğŸš—
        env:
          TTT: ${{needs.staging_containers_build.outputs.ttt}}
        run: |
          echo "get from vault"
          echo "$TTT"
  staging_deploy:
    runs-on: self-hosted
    needs: [staging_prepare, staging_frontend_build, staging_containers_build]
    concurrency:
      group: staging
      cancel-in-progress: false
    steps:
      - name: Staging deploy ${{needs.staging_containers_build.outputs.ttt}} ğŸš—
        env:
          TTT: ${{needs.staging_containers_build.outputs.ttt}}
        run: |
          echo "$TTT"