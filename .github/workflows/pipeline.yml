name: Pipeline-Tests

on:
  pull_request:
    branches: [ master ]
  workflow_call:

jobs:
  changed_backend:
    runs-on: pipeline
    outputs:
      backend_changed: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Backend changes ðŸš—
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'Dockerfile'
              - 'composer.json'
              - 'composer.lock'
              - '**/*.php'
              - '**/*.sql'
              - '*.xml'
              # - '*.yml'
              - '*.neon'
              - '**/*.sh'
              - 'devops/docker/*'

  changed_frontend:
    runs-on: pipeline
    outputs:
      frontend_changed: ${{ steps.filter.outputs.frontend }}
      frontend_exclude: ${{ steps.filter.outputs.exclude }}
    steps:
      - name: Frontend changes ðŸš—
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'package.json'
              - 'yarn.lock'
              - '**/*.js'
              - '**/*.ts'
              - '**/*.html'
              - '**/*.css'
              - '**/*.scss'
              # - '*.yml'
              - '**/*.json'
              - '**/*.sh'
            exclude:
              - 'tests/Cypress/**/*.po.ts'
              - 'tests/Cypress/**/*.host.ts'
              - 'tests/Cypress/**/*.spec.ts'
              - '.github/workflows/production.yml'
              - '.github/workflows/staging.yml'

  changed_e2e:
    runs-on: pipeline
    outputs:
      e2e_changed: ${{ steps.filter.outputs.e2e }}
    steps:
      - name: E2E changes ðŸš—
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            e2e:
              - 'package.json'
              - 'yarn.lock'
              - 'tests/Protractor/**/*.js'
              - 'tests/Cypress/**/*.ts'
              - 'tests/Cypress/**/*.json'
              - 'tests/Wdio/**/*.ts'
              - 'tests/Wdio/**/*.json'
              - 'devops/docker/**/*'

  changed_general:
    runs-on: pipeline
    outputs:
      general_changed: ${{ steps.filter.outputs.general }}
    steps:
      - name: General changes ðŸš—
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            general:
              - 'Dockerfile'
              - 'composer.json'
              - 'composer.lock'
              - 'package.json'
              - 'yarn.lock'
              - '**/*.php'
              - '**/*.sql'
              - '*.xml'
              # - '*.yml'
              - '**/*.sh'
              - '**/*.js'
              - 'resources/**/!(*.spec|*.po|*.host).ts'
              - 'tests/Cypress/**/*.ts'
              - '*.ts'
              - '**/*.html'
              - '**/*.css'
              - '**/*.scss'
              - '**/*.json'

  backend_test:
    runs-on: pipeline
    needs: [changed_backend]
    if: (needs.changed_backend.outputs.backend_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Backend test ðŸš—
        run: |
            echo "Run Backend test"

  backend_code_style:
    runs-on: pipeline
    needs: [changed_backend]
    if: (needs.changed_backend.outputs.backend_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Backend CodeStyle ðŸš—
        run: |
            echo "Run Backend test"

  backend_phpstan:
    needs: [changed_backend]
    if: (needs.changed_backend.outputs.backend_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    runs-on: pipeline
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Backend PHPStan ðŸš—
        run: |
            echo "Run Backend PHPStan"

  backend_phpstan_update_fallback:
    needs: [changed_backend, backend_phpstan]
    if: (needs.changed_backend.outputs.backend_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    runs-on: pipeline
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Backend PHPStan fallback ðŸš—
        run: |
            echo "Run Backend PHPStan fallback"

  backend_phpstan_highest:
    needs: [changed_backend]
    if: (needs.changed_backend.outputs.backend_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    runs-on: pipeline
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Backend PHPStan highest ðŸš—
        run: |
            echo "Run Backend PHPStan highest"

  backend_phpstan_highest_update_fallback:
    needs: [changed_backend, backend_phpstan_highest]
    if: (needs.changed_backend.outputs.backend_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    runs-on: pipeline
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Backend PHPStan highest fallback ðŸš—
        run: |
            echo "Run Backend PHPStan highest fallback"

  code_quality:
    runs-on: pipeline
    needs: [changed_backend]
    if: (needs.changed_backend.outputs.backend_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Code Quality ðŸš—
        run: |
            echo "Run Code Quality"

  frontend_build:
    runs-on: pipeline
    needs: [changed_general]
    if: (needs.changed_general.outputs.general_changed == 'true' && github.event_name == 'pull_request' && github.event.action != 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Frontend Build ðŸš—
        run: |
            echo "Run Frontend Build"

  frontend_test:
    runs-on: pipeline
    needs: [changed_frontend]
    if: (needs.changed_frontend.outputs.frontend_changed == 'true' && needs.changed_frontend.outputs.frontend_exclude != 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Frontend test ðŸš—
        run: |
            echo "Run Frontend test"

  frontend_code_style:
    runs-on: pipeline
    needs: [changed_frontend]
    if: (needs.changed_frontend.outputs.frontend_changed == 'true' && needs.changed_frontend.outputs.frontend_exclude != 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Frontend Code Style ðŸš—
        run: |
            echo "Run Frontend Code Style"

  e2e_cypress_prepare:
    runs-on: pipeline
    needs: [changed_general]
    if: (needs.changed_general.outputs.general_changed == 'true' && github.event_name == 'pull_request' && github.event.action != 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: E2E Cypress prepare ðŸš—
        run: |
            echo "Run E2E Cypress prepare"

  e2e_cypress:
    needs: [changed_general, e2e_cypress_prepare, frontend_build]
    if: (needs.changed_general.outputs.general_changed == 'true' && github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: pipeline
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: E2E Cypress ðŸš—
        run: |
            echo "E2E Cypress"

  cypress_code_style:
    runs-on: pipeline
    needs: [changed_e2e]
    if: (needs.changed_e2e.outputs.e2e_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Cypress Code Style ðŸš—
        run: |
            echo "Run Cypress Code Style"

  wdio_code_style:
    runs-on: pipeline
    needs: [changed_e2e]
    if: (needs.changed_e2e.outputs.e2e_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Wdio Code Style ðŸš—
        run: |
            echo "Run Wdio Code Style"

  backend_license_checker:
    runs-on: pipeline
    needs: [changed_backend]
    if: (needs.changed_backend.outputs.backend_changed == 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Backend license checker ðŸš—
        run: |
            echo "Run Backend license checker"

  frontend_license_checker:
    runs-on: pipeline
    needs: [changed_frontend]
    if: (needs.changed_frontend.outputs.frontend_changed == 'true' && needs.changed_frontend.outputs.frontend_exclude != 'true') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - name: Checkout
        run: |
            echo "Checkout"
      - name: Frontend license checker ðŸš—
        run: |
            echo "Run Frontend license checker"