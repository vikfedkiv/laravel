dist: bionic
addons:
  apt:
    packages:
      - sshpass
env:
  global:
  - DEBIAN_FRONTEND=noninteractive
    #  - SSH_STAGING=$HOSTNAME_STAGING
    #  - SSH_MASTER=$HOSTNAME_MASTER
before_install:
- pip install -U pip
- pip install awscli
  #- openssl aes-256-cbc -K $encrypted_dfdcfd5172af_key -iv $encrypted_dfdcfd5172af_iv
  #  -in deploy_key.enc -out ./deploy_key -d
  #- eval "$(ssh-agent -s)"
  #- chmod 600 ./deploy_key
- echo $PRIVATE_KEY | base64 -d > ~/.ssh/deploy_key
- chmod 600 ~/.ssh/deploy_key
- echo -e "Host $HOSTNAME_STAGING\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
- echo -e "Host $HOSTNAME_MASTER\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
- ssh-add ~/.ssh/deploy_key
- sudo mysql -e "use mysql; update user set authentication_string=PASSWORD('root')
  where User='root'; update user set plugin='mysql_native_password';FLUSH PRIVILEGES;"
- sudo mysql_upgrade -u root -proot
- sudo service mysql restart
- composer global require hirak/prestissimo
language: php
php:
- 7.4
services:
- mysql
install:
- cp .env.example .env
- sudo mysql -uroot -proot -e 'CREATE DATABASE laravel;'
- sudo mysql -uroot -proot -e "CREATE USER 'keller'@'localhost' IDENTIFIED BY 'password';"
- sudo mysql -uroot -proot -e "GRANT ALL ON laravel.* TO 'keller'@'localhost';"
- composer self-update
- COMPOSER_MEMORY_LIMIT=-1 travis_retry composer install --prefer-dist --no-interaction
- php artisan key:generate
- php artisan migrate
jobs:
  include:
  - stage: Tests
    name: Backend Tests
    script:
    - echo "backend test 1"
    - echo "backend test 2"
  - script:
    - echo "frontend test 1"
    - echo "frontend test 2"
    name: Frontend Tests
  - stage: Deploy
    name: Deploy to server
    install: skip
    script:
    - git config --global user.email "travis@travis-ci.org"
    - git config --global user.name "Travis CI"
    - git remote remove origin
    - git remote add origin https://${GH_TOKEN}@github.com/vikfedkiv/laravel.git > /dev/null 2>&1
    - if [[ $TRAVIS_BRANCH == "staging" ]] ; then echo "Testing brach $TRAVIS_BRANCH" ; fi || travis_terminate 1;
      #    - sh/pipeline/merge_pull_request.sh $TRAVIS_PULL_REQUEST
    - if [[ $TRAVIS_BRANCH == "staging" ]] ; then ssh -i ~/.ssh/deploy_key ubuntu@$HOSTNAME_STAGING echo "Test" ; fi
    - if [[ $TRAVIS_BRANCH == "master" ]] ; then ssh -i ~/.ssh/deploy_key ubuntu@$HOSTNAME_MASTER echo "Test" ; fi
